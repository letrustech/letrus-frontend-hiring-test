{"ast":null,"code":"import axios from 'axios';\nexport const FETCH_CHARACTERS_REQUEST = 'FETCH_CHARACTERS_REQUEST';\nexport const FETCH_CHARACTERS_SUCCESS = 'FETCH_CHARACTERS_SUCCESS';\nexport const FETCH_CHARACTERS_FAILURE = 'FETCH_CHARACTERS_FAILURE';\nexport const FETCH_CHARACTER_REQUEST = 'FETCH_CHARACTER_REQUEST';\nexport const FETCH_CHARACTER_SUCCESS = 'FETCH_CHARACTER_SUCCESS';\nexport const FETCH_CHARACTER_FAILURE = 'FETCH_CHARACTER_FAILURE';\nexport const fetchCharactersRequest = () => {\n  return {\n    type: FETCH_CHARACTERS_REQUEST\n  };\n};\nexport const fetchCharactersSuccess = characters => {\n  return {\n    type: FETCH_CHARACTERS_SUCCESS,\n    payload: characters\n  };\n};\nexport const fetchCharactersFailure = error => {\n  return {\n    type: FETCH_CHARACTERS_FAILURE,\n    payload: error\n  };\n};\nexport const fetchCharacterById = characterId => {\n  return async dispatch => {\n    dispatch(fetchCharactersRequest());\n    try {\n      const response = await axios.get(`https://rickandmortyapi.com/api/character/${characterId}`);\n      dispatch(fetchCharactersSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchCharactersFailure('Failed to fetch character'));\n    }\n  };\n};","map":{"version":3,"names":["axios","FETCH_CHARACTERS_REQUEST","FETCH_CHARACTERS_SUCCESS","FETCH_CHARACTERS_FAILURE","FETCH_CHARACTER_REQUEST","FETCH_CHARACTER_SUCCESS","FETCH_CHARACTER_FAILURE","fetchCharactersRequest","type","fetchCharactersSuccess","characters","payload","fetchCharactersFailure","error","fetchCharacterById","characterId","dispatch","response","get","data"],"sources":["/home/dell/Documentos/letrus-frontend-hiring-test/src/store/actions/actions.ts"],"sourcesContent":["import axios from 'axios';\n\nexport const FETCH_CHARACTERS_REQUEST = 'FETCH_CHARACTERS_REQUEST';\nexport const FETCH_CHARACTERS_SUCCESS = 'FETCH_CHARACTERS_SUCCESS';\nexport const FETCH_CHARACTERS_FAILURE = 'FETCH_CHARACTERS_FAILURE';\nexport const FETCH_CHARACTER_REQUEST = 'FETCH_CHARACTER_REQUEST';\nexport const FETCH_CHARACTER_SUCCESS = 'FETCH_CHARACTER_SUCCESS';\nexport const FETCH_CHARACTER_FAILURE = 'FETCH_CHARACTER_FAILURE';\n\nexport const fetchCharactersRequest = () => {\n  return {\n    type: FETCH_CHARACTERS_REQUEST,\n  };\n};\n\nexport const fetchCharactersSuccess = (characters: any) => {\n  return {\n    type: FETCH_CHARACTERS_SUCCESS,\n    payload: characters,\n  };\n};\n\nexport const fetchCharactersFailure = (error: string) => {\n  return {\n    type: FETCH_CHARACTERS_FAILURE,\n    payload: error,\n  };\n};\n\nexport const fetchCharacterById = (characterId: number) => {\n  return async (dispatch: (arg0: { type: string; payload?: any; }) => void) => {\n    dispatch(fetchCharactersRequest());\n    try {\n      const response = await axios.get(`https://rickandmortyapi.com/api/character/${characterId}`);\n      dispatch(fetchCharactersSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchCharactersFailure('Failed to fetch character'));\n    }\n  };\n};\n\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,MAAMC,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,MAAMC,wBAAwB,GAAG,0BAA0B;AAClE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAEhE,OAAO,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAC1C,OAAO;IACLC,IAAI,EAAEP;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMQ,sBAAsB,GAAIC,UAAe,IAAK;EACzD,OAAO;IACLF,IAAI,EAAEN,wBAAwB;IAC9BS,OAAO,EAAED;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAIC,KAAa,IAAK;EACvD,OAAO;IACLL,IAAI,EAAEL,wBAAwB;IAC9BQ,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,WAAmB,IAAK;EACzD,OAAO,MAAOC,QAA0D,IAAK;IAC3EA,QAAQ,CAACT,sBAAsB,CAAC,CAAC,CAAC;IAClC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,6CAA4CH,WAAY,EAAC,CAAC;MAC5FC,QAAQ,CAACP,sBAAsB,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,OAAON,KAAK,EAAE;MACdG,QAAQ,CAACJ,sBAAsB,CAAC,2BAA2B,CAAC,CAAC;IAC/D;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}